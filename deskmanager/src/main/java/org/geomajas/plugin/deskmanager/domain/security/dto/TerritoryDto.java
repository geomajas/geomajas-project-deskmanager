/*
 * This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
 *
 * Copyright 2008-2014 Geosparc nv, http://www.geosparc.com/, Belgium.
 *
 * The program is available in open source according to the GNU Affero
 * General Public License. All contributions in this program are covered
 * by the Geomajas Contributors License Agreement. For full licensing
 * details, see LICENSE.txt in the project root.
 */
package org.geomajas.plugin.deskmanager.domain.security.dto;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.geomajas.geometry.Geometry;
import org.geomajas.plugin.deskmanager.domain.dto.BlueprintDto;
import org.geomajas.plugin.deskmanager.domain.dto.GeodeskDto;

/**
 * DTO version of Territory, does not always include geometry! See
 * {@link org.geomajas.plugin.deskmanager.domain.security.Territory}
 * 
 * @author Oliver May
 * @author Kristof Heirwegh
 * 
 */
public class TerritoryDto implements Serializable {

	private static final long serialVersionUID = 1L;

	private Long id;

	@Size(min = 0, max = 10)
	@NotNull
	private String name;

	private String code;

	private String crs;

	private CategoryDto category;

	private List<BlueprintDto> blueprints = new ArrayList<BlueprintDto>();

	private List<GeodeskDto> geodesks = new ArrayList<GeodeskDto>();

	private Geometry geometry;

	// ----------------------------------------------------------
	/**
	 * Get the identifier of this territory.
	 * 
	 * @return the identifier.
	 */
	public Long getId() {
		return id;
	}

	/**
	 * Set the identifier of this territory. Usually auto generated by hibernate.
	 * 
	 * @param id the identifier.
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Get the name of the territory.
	 * 
	 * @return the name.
	 */
	public String getName() {
		return name;
	}

	/**
	 * Set the name of the territory.
	 * 
	 * @param name the name.
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Get the code of the territory. For example the ISO country code.
	 * 
	 * @return the code.
	 */
	public String getCode() {
		return code;
	}

	/**
	 * Set the code of the territory. For example the ISO country code.
	 * 
	 * @param code the code.
	 */
	public void setCode(String code) {
		this.code = code;
	}
	
	public String getCrs() {
		return crs;
	}
	
	public void setCrs(String crs) {
		this.crs = crs;
	}

	/**
	 * Get the optional category on the territory.
	 * 
	 * @return the category.
	 */
	public CategoryDto getCategory() {
		return category;
	}

	/**
	 * Set the optional category on the territory.
	 * 
	 * @param category the category.
	 */
	public void setCategory(CategoryDto category) {
		this.category = category;
	}

	/**
	 * Get a list of all the blueprints managed by this territory.
	 * 
	 * @return the list of blueprints.
	 */
	public List<BlueprintDto> getBlueprints() {
		return blueprints;
	}

	/**
	 * Set a list of all the blueprints managed by this territory.
	 * 
	 * @param blueprints the list of blueprints.
	 */
	public void setBlueprints(List<BlueprintDto> blueprints) {
		this.blueprints = blueprints;
	}

	/**
	 * Get a list of geodesks managed by this territory.
	 * 
	 * @return the list of geodesks.
	 */
	public List<GeodeskDto> getGeodesks() {
		return geodesks;
	}

	/**
	 * Set a list of geodesks managed by this territory.
	 * 
	 * @param geodesks the list of geodesks.
	 */
	public void setGeodesks(List<GeodeskDto> geodesks) {
		this.geodesks = geodesks;
	}

	public Geometry getGeometry() {
		return geometry;
	}

	public void setGeometry(Geometry geometry) {
		this.geometry = geometry;
	}
	

	public TerritoryDto clone() {
		TerritoryDto clone = new TerritoryDto();
		clone.setId(id);
		clone.setName(name);
		clone.setCode(code);
		clone.setCrs(crs);
		if (geometry != null) {
			clone.setGeometry((Geometry) geometry.clone());
		}
		if (category != null) {
			clone.setCategory(category.clone());
		}
		return clone;
	}


}
