<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!--
  ~ This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
  ~
  ~ Copyright 2008-2015 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<chapter id="chapter-editors">
  <title>Editor</title>

	<para>This section explains about the editor widget framework. First, the existing editor widgets are presented.
		Finally, there is an explanation on how to create custom editor widgets.</para>

	<section id="editor-searchandfilter">
		<title>Search And Filter Editor</title>
		<para>Specific search patterns can be configred, saved and than executed.</para>
		<section id="editor-searchandfilter-configuration">
			<title>Configuration</title>
			    <para>To enable this Search And Filter functionality, you will need to add Maven dependency to the pom.xml:</para>
				<programlisting language="xml"><!-- for manager section -->
&lt;dependency&gt;
&lt;groupId&gt;org.geomajas.widget&lt;/groupId&gt;
&lt;artifactId&gt;geomajas-widget-searchandfilter-editor&lt;/artifactId&gt;
&lt;version&gt;<?eval ${project.version}?>&lt;/version&gt;
&lt;/dependency&gt;

<!-- for geodesk ribbon section -->
&lt;dependency&gt;
&lt;groupId&gt;org.geomajas.widget&lt;/groupId&gt;
&lt;artifactId&gt;geomajas-widget-searchandfilter-ribbon-gwt&lt;/artifactId&gt;
&lt;version&gt;<?eval ${project.version}?>&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
				<para>Add following modules to the GWT entry point file:</para>
				<programlisting language="xml"><!-- for manager section -->
&lt;inherits name="org.geomajas.widget.searchandfilter.editor.SearchAndFilterEditor" /&gt;

<!-- for geodesk ribbon section -->
&lt;inherits name="org.geomajas.widget.searchandfilter.ribbon.SearchAndFilterRibbonGwt" /&gt;</programlisting>

			<para>Somewhere in the startup code of the application, you should register</para>
			<itemizedlist>
				<listitem>
					<para>a <code>ConfiguredSearchEditorFactory</code> to the <code>WidgetEditorFactoryRegistry</code></para>
				</listitem>

				<listitem>
					<para>a <code>ConfiguredSearchCreator</code> to the <code>SearchWidgetRegistry</code></para>
				</listitem>
			</itemizedlist>
			<programlisting language="java"><!-- for manager section -->
WidgetEditorFactoryRegistry.getLayerRegistry().register(new ConfiguredSearchEditorFactory());

<!-- for geodesk ribbon section -->
SearchWidgetRegistry.put(new ConfiguredSearchCreator())</programlisting>

			<subtitle>Geodesk Configuration</subtitle>

		</section>
		<section id="editor-searchandfilter-manager">
			<title>Create 'configured' searches in manager section.</title>
			<para>As a consequence of the configuration above, configured searches can be added to a vector layer.
				Make sure in a geodesk, the vector layer is in the list of selected layers.
				In the layer configuration window, the "Extra" section shows a "Searches" tab.</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="images/layer-configuration-with-searches.png"
							   width="" />
				</imageobject>
			</mediaobject>
			<para>For each search, a number of search conditions can be added in a table.
				Each condition implies the comparison of a feature attribute to a value.
				The feature attribute can be selected, as well as the comparison operator and the input type for the value.</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="images/search-attributes-configuration.png"
							   width="" />
				</imageobject>
			</mediaobject>
		</section>
		<section id="editor-searchandfilter-geodesk">
			<title>Execute 'configured' searches in geodesk application.</title>
			<para>The searches that have been configured in the management section, can be automatically added to the
				search button of the ribbon toolbar of the geodesk application.
			The two searches "Search One" and "Search Two" from image above, will be shown as follows:</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="images/ribbon-search-button-with-configured-searches.png"
							   width="" />
				</imageobject>
			</mediaobject>
			<para>To add the configured searches to the ribbon button, some additional configuration in necessary in the ribbon.xml file.
			Normally, the search button will be add as a <code>RibbonColumnInfo</code> bean of type <code>ToolbarDropDownButton</code>.
				If the type value is change to <code>ToolbarDropDownAndSearchesButton</code> and the other settings remain the same,
			the configured searches will be added at the button of the drop down list, as a separate group, as shown above.</para>
			<programlisting language="xml">&lt;bean class="org.geomajas.widget.utility.configuration.RibbonColumnInfo"&gt;
&lt;!--&lt;property name="type" value="ToolbarDropDownButton" /&gt; substitute this line for next --&gt;
&lt;property name="type" value="ToolbarDropDownAndSearchesButton" /&gt;
&lt;property name="parameters"&gt;...&lt;/property&gt;
&lt;property name="tools"&gt;...&lt;/property&gt;
&lt;/bean&gt;</programlisting>
			<para>When clicking the button of a configured search, a window opens with all search conditions.
				E.g. the search configuration above results in:</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="images/search-attributes-execution.png"
							   width="" />
				</imageobject>
			</mediaobject>
		</section>
	</section>
	<section id="editor-custom">
		<title>Custom Editor Widget</title>
		<para>For creating a custom editor widget, you need a factory that extends <code>WidgetEditorFactory</code> and that creates editor objects,
					extending <code>WidgetEditor</code>. Lets call these custom classes <code>CustomWidgetEditorFactory</code> and
					<code>CustomWidgetEditor</code>. The factory needs to be registered to the required registries, e.g.:</para>
				<programlisting language="java">WidgetEditorFactoryRegistry.getMapRegistry().register(new CustomWidgetEditorFactory());
WidgetEditorFactoryRegistry.getApplicationRegistry().register(new CustomWidgetEditorFactory());
WidgetEditorFactoryRegistry.getLayerRegistry().register(new CustomWidgetEditorFactory());</programlisting>
		<para>The <code>CustomWidgetEditor</code> must return a <code>ClientWidgetInfo</code> object. This object will be saved
			in the deskmanager database, as a mapped property of the <code>LayerDto</code> object.
			In the database, the <code>ClientWidgetInfo</code> objects are found in the table <emphasis>gdm_clientlayer_clientwidgetinfo</emphasis>.</para>
		<para>A save is automatically performed on clicking the provided save button of the deskmanager application.
			TODO continue</para>

	</section>
</chapter>
